```{r}
#| include: false

if (!require("pacman")) install.packages("pacman")
library(pacman)
pacman::p_load(DiagrammeR, webshot)
if (!webshot::is_phantomjs_installed())
  {
  webshot::install_phantomjs()
  }
```

::: {.content-visible when-format="html"}
<!-- Just want this preface in the gitbook.
     PDF output will have its own copyright page after the title.-->

This book is the guide to using the *TinyExpr++* library, a C++ formula parsing and evaluation system.

![](manual/images/CC_BY-NC-ND.png)

This book is licensed under the [Creative Commons Attribution-NonCommercial-NoDerivs 4.0 International License](https://creativecommons.org/licenses/by-nc-nd/4.0/).
:::

# Overview {-}

This is the programming manual for *TinyExpr++*, the C++ version of the *TinyExpr* [@TinyExpr] formula parsing library.
(This manual includes documentation from *TinyExpr* by Lewis Van Winkle.)

*TinyExpr++* is a small parser and evaluation library for solving math expressions from C++.
It's open-source, free, easy-to-use, and self-contained in a single source and header file pair.

## Features {-}

- C++17 with no dependencies.
- Single source file and header file.
- Simple and fast.
- Implements standard operator precedence.
- Implements logical and comparison operators.
- Includes standard C math functions (`sin`, `sqrt`, `ln`, etc.).
- Includes some *Excel*-like statistical, logical, and financial functions (e.g., `AVERAGE` and `IF`).
- Can add custom functions and variables easily.
- Can add a custom handler to resolve unknown variables.
- Can bind constants at eval-time.
- Supports variadic functions (taking between 1-24 arguments).
- Case insensitive.
- Supports non-US formulas (e.g., `POW(2,2; 2)` instead of `POW(2.2, 2)`).
- Supports C and C++ style comments within math expressions.
- Can be configured to use `double`, `long double`, or [`float`](#te-float) for its calculations.
- Released under the zlib license - free for nearly any use.
- Easy to use and integrate with your code.
- Thread-safe; parser can be constructed as per thread objects.
